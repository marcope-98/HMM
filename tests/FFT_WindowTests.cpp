#include "catch2/catch2.hpp"
#include "libspeech/Window.hpp"

TEST_CASE("LibspeechTests", "[testLibspeech]")
{
    SECTION("Barthann")
    {
        Window test(Barthann, 64);
        std::vector<double> ground = {0.0000, 0.0095, 0.0228, 0.0397, 0.0603, 0.0844, 0.1117, 0.1422, 0.1756, 0.2116, 0.2500, 0.2904, 0.3326, 0.3761, 0.4207, 0.4659, 0.5114, 0.5568, 0.6017, 0.6458, 0.6887, 0.7300, 0.7694, 0.8067, 0.8414, 0.8734, 0.9023, 0.9281, 0.9504, 0.9692, 0.9843, 0.9957, 0.9957, 0.9843, 0.9692, 0.9504, 0.9281, 0.9023, 0.8734, 0.8414, 0.8067, 0.7694, 0.7300, 0.6887, 0.6458, 0.6017, 0.5568, 0.5114, 0.4659, 0.4207, 0.3761, 0.3326, 0.2904, 0.2500, 0.2116, 0.1756, 0.1422, 0.1117, 0.0844, 0.0603, 0.0397, 0.0228, 0.0095, 0.0000};
        REQUIRE_THAT(ground, Catch::Approx(test.getdata()).margin(0.0001));
    }
    SECTION("BARTLETT")
    {
        Window test(Bartlett, 64);
        std::vector<double> ground = {0.0000, 0.0317, 0.0635, 0.0952, 0.1270, 0.1587, 0.1905, 0.2222, 0.2540, 0.2857, 0.3175, 0.3492, 0.3810, 0.4127, 0.4444, 0.4762, 0.5079, 0.5397, 0.5714, 0.6032, 0.6349, 0.6667, 0.6984, 0.7302, 0.7619, 0.7937, 0.8254, 0.8571, 0.8889, 0.9206, 0.9524, 0.9841, 0.9841, 0.9524, 0.9206, 0.8889, 0.8571, 0.8254, 0.7937, 0.7619, 0.7302, 0.6984, 0.6667, 0.6349, 0.6032, 0.5714, 0.5397, 0.5079, 0.4762, 0.4444, 0.4127, 0.3810, 0.3492, 0.3175, 0.2857, 0.2540, 0.2222, 0.1905, 0.1587, 0.1270, 0.0952, 0.0635, 0.0317, 0.0000};
        REQUIRE_THAT(ground, Catch::Approx(test.getdata()).margin(0.0001));
    }
    SECTION("BLACKMAN")
    {
        Window test(Blackman, 64);
        std::vector<double> ground = {0.0000, 0.0009, 0.0036, 0.0083, 0.0151, 0.0243, 0.0361, 0.0509, 0.0689, 0.0905, 0.1158, 0.1452, 0.1787, 0.2163, 0.2580, 0.3035, 0.3526, 0.4046, 0.4592, 0.5155, 0.5727, 0.6300, 0.6864, 0.7409, 0.7925, 0.8402, 0.8831, 0.9204, 0.9511, 0.9748, 0.9909, 0.9990, 0.9990, 0.9909, 0.9748, 0.9511, 0.9204, 0.8831, 0.8402, 0.7925, 0.7409, 0.6864, 0.6300, 0.5727, 0.5155, 0.4592, 0.4046, 0.3526, 0.3035, 0.2580, 0.2163, 0.1787, 0.1452, 0.1158, 0.0905, 0.0689, 0.0509, 0.0361, 0.0243, 0.0151, 0.0083, 0.0036, 0.0009, 0.0000};
        REQUIRE_THAT(ground, Catch::Approx(test.getdata()).margin(0.0001));
    }
    SECTION("BLACKMAN_HARRIS")
    {
        Window test(Blackman_Harris, 64);
        std::vector<double> ground = {0.0001, 0.0002, 0.0007, 0.0016, 0.0032, 0.0057, 0.0095, 0.0151, 0.0228, 0.0334, 0.0473, 0.0651, 0.0873, 0.1145, 0.1470, 0.1852, 0.2289, 0.2783, 0.3328, 0.3920, 0.4549, 0.5206, 0.5876, 0.6546, 0.7200, 0.7820, 0.8390, 0.8894, 0.9317, 0.9646, 0.9871, 0.9986, 0.9986, 0.9871, 0.9646, 0.9317, 0.8894, 0.8390, 0.7820, 0.7200, 0.6546, 0.5876, 0.5206, 0.4549, 0.3920, 0.3328, 0.2783, 0.2289, 0.1852, 0.1470, 0.1145, 0.0873, 0.0651, 0.0473, 0.0334, 0.0228, 0.0151, 0.0095, 0.0057, 0.0032, 0.0016, 0.0007, 0.0002, 0.0001};
        REQUIRE_THAT(ground, Catch::Approx(test.getdata()).margin(0.0001));
    }
    SECTION("BOHMAN")
    {
        Window test(Bohman, 64);
        std::vector<double> ground = {0.0000, 0.0001, 0.0008, 0.0028, 0.0066, 0.0128, 0.0219, 0.0344, 0.0505, 0.0707, 0.0952, 0.1239, 0.1571, 0.1946, 0.2363, 0.2818, 0.3309, 0.3829, 0.4375, 0.4938, 0.5513, 0.6090, 0.6661, 0.7218, 0.7750, 0.8248, 0.8703, 0.9104, 0.9442, 0.9707, 0.9892, 0.9988, 0.9988, 0.9892, 0.9707, 0.9442, 0.9104, 0.8703, 0.8248, 0.7750, 0.7218, 0.6661, 0.6090, 0.5513, 0.4938, 0.4375, 0.3829, 0.3309, 0.2818, 0.2363, 0.1946, 0.1571, 0.1239, 0.0952, 0.0707, 0.0505, 0.0344, 0.0219, 0.0128, 0.0066, 0.0028, 0.0008, 0.0001, 0.0000};
        REQUIRE_THAT(ground, Catch::Approx(test.getdata()).margin(0.0001));
    }
    SECTION("COSINE")
    {
        Window test(Cosine, 64);
        std::vector<double> ground = {};
        REQUIRE_THAT(ground, Catch::Approx(test.getdata()).margin(0.0001));
    }
    SECTION("EXACTBLACKMAN")
    {
        Window test(ExactBlackman, 64);
        std::vector<double> ground = {};
        REQUIRE_THAT(ground, Catch::Approx(test.getdata()).margin(0.0001));
    }
    SECTION("FLATTOP")
    {
        Window test(Flattop, 64);
        std::vector<double> ground = {-0.0004, -0.0007, -0.0015, -0.0030, -0.0054, -0.0090, -0.0139, -0.0202, -0.0279, -0.0368, -0.0464, -0.0559, -0.0641, -0.0694, -0.0702, -0.0645, -0.0503, -0.0257, 0.0107, 0.0601, 0.1227, 0.1982, 0.2851, 0.3810, 0.4827, 0.5863, 0.6873, 0.7809, 0.8625, 0.9279, 0.9735, 0.9970, 0.9970, 0.9735, 0.9279, 0.8625, 0.7809, 0.6873, 0.5863, 0.4827, 0.3810, 0.2851, 0.1982, 0.1227, 0.0601, 0.0107, -0.0257, -0.0503, -0.0645, -0.0702, -0.0694, -0.0641, -0.0559, -0.0464, -0.0368, -0.0279, -0.0202, -0.0139, -0.0090, -0.0054, -0.0030, -0.0015, -0.0007, -0.0004};
        REQUIRE_THAT(ground, Catch::Approx(test.getdata()).margin(0.0001));
    }
    SECTION("GAUSSIAN")
    {
        Window test(Gaussian, 64, 2.5);
        std::vector<double> ground = {0.0439, 0.0534, 0.0645, 0.0775, 0.0924, 0.1095, 0.1290, 0.1510, 0.1757, 0.2030, 0.2332, 0.2662, 0.3019, 0.3403, 0.3812, 0.4243, 0.4692, 0.5157, 0.5633, 0.6113, 0.6593, 0.7066, 0.7526, 0.7965, 0.8377, 0.8754, 0.9091, 0.9382, 0.9622, 0.9805, 0.9929, 0.9992, 0.9992, 0.9929, 0.9805, 0.9622, 0.9382, 0.9091, 0.8754, 0.8377, 0.7965, 0.7526, 0.7066, 0.6593, 0.6113, 0.5633, 0.5157, 0.4692, 0.4243, 0.3812, 0.3403, 0.3019, 0.2662, 0.2332, 0.2030, 0.1757, 0.1510, 0.1290, 0.1095, 0.0924, 0.0775, 0.0645, 0.0534, 0.0439};
        REQUIRE_THAT(ground, Catch::Approx(test.getdata()).margin(0.0001));
    }
    SECTION("HAMMING")
    {
        Window test(Hamming, 64);
        std::vector<double> ground = {0.0800, 0.0823, 0.0891, 0.1004, 0.1161, 0.1360, 0.1599, 0.1876, 0.2188, 0.2532, 0.2904, 0.3301, 0.3719, 0.4154, 0.4601, 0.5056, 0.5515, 0.5972, 0.6424, 0.6865, 0.7292, 0.7700, 0.8085, 0.8444, 0.8772, 0.9067, 0.9325, 0.9544, 0.9723, 0.9858, 0.9949, 0.9994, 0.9994, 0.9949, 0.9858, 0.9723, 0.9544, 0.9325, 0.9067, 0.8772, 0.8444, 0.8085, 0.7700, 0.7292, 0.6865, 0.6424, 0.5972, 0.5515, 0.5056, 0.4601, 0.4154, 0.3719, 0.3301, 0.2904, 0.2532, 0.2188, 0.1876, 0.1599, 0.1360, 0.1161, 0.1004, 0.0891, 0.0823, 0.0800};
        REQUIRE_THAT(ground, Catch::Approx(test.getdata()).margin(0.0001));
    }
    SECTION("HANN")
    {
        Window test(Hann, 64);
        std::vector<double> ground = {0.0000, 0.0025, 0.0099, 0.0222, 0.0393, 0.0609, 0.0869, 0.1170, 0.1509, 0.1883, 0.2287, 0.2719, 0.3173, 0.3646, 0.4132, 0.4626, 0.5125, 0.5622, 0.6113, 0.6592, 0.7056, 0.7500, 0.7919, 0.8308, 0.8665, 0.8986, 0.9266, 0.9505, 0.9698, 0.9845, 0.9944, 0.9994, 0.9994, 0.9944, 0.9845, 0.9698, 0.9505, 0.9266, 0.8986, 0.8665, 0.8308, 0.7919, 0.7500, 0.7056, 0.6592, 0.6113, 0.5622, 0.5125, 0.4626, 0.4132, 0.3646, 0.3173, 0.2719, 0.2287, 0.1883, 0.1509, 0.1170, 0.0869, 0.0609, 0.0393, 0.0222, 0.0099, 0.0025, 0.0000};
        REQUIRE_THAT(ground, Catch::Approx(test.getdata()).margin(0.0001));
    }
    SECTION("LANCZOS")
    {
        Window test(Lanczos, 64);
        std::vector<double> ground = {};
        REQUIRE_THAT(ground, Catch::Approx(test.getdata()).margin(0.0001));
    }
    SECTION("NUTTALL")
    {
        Window test(Nuttall, 64);
        std::vector<double> ground = {0.0004, 0.0006, 0.0012, 0.0024, 0.0043, 0.0073, 0.0117, 0.0179, 0.0264, 0.0378, 0.0525, 0.0712, 0.0943, 0.1223, 0.1556, 0.1943, 0.2386, 0.2881, 0.3427, 0.4017, 0.4642, 0.5292, 0.5955, 0.6615, 0.7257, 0.7866, 0.8425, 0.8919, 0.9332, 0.9654, 0.9874, 0.9986, 0.9986, 0.9874, 0.9654, 0.9332, 0.8919, 0.8425, 0.7866, 0.7257, 0.6615, 0.5955, 0.5292, 0.4642, 0.4017, 0.3427, 0.2881, 0.2386, 0.1943, 0.1556, 0.1223, 0.0943, 0.0712, 0.0525, 0.0378, 0.0264, 0.0179, 0.0117, 0.0073, 0.0043, 0.0024, 0.0012, 0.0006, 0.0004};
        REQUIRE_THAT(ground, Catch::Approx(test.getdata()).margin(0.0001));
    }
    SECTION("PARZEN")
    {
        Window test(Parzen, 64);
        std::vector<double> ground = {0.0000, 0.0002, 0.0010, 0.0026, 0.0056, 0.0102, 0.0168, 0.0257, 0.0375, 0.0523, 0.0707, 0.0928, 0.1192, 0.1502, 0.1861, 0.2273, 0.2741, 0.3263, 0.3826, 0.4421, 0.5036, 0.5660, 0.6282, 0.6891, 0.7477, 0.8027, 0.8532, 0.8980, 0.9361, 0.9662, 0.9874, 0.9986, 0.9986, 0.9874, 0.9662, 0.9361, 0.8980, 0.8532, 0.8027, 0.7477, 0.6891, 0.6282, 0.5660, 0.5036, 0.4421, 0.3826, 0.3263, 0.2741, 0.2273, 0.1861, 0.1502, 0.1192, 0.0928, 0.0707, 0.0523, 0.0375, 0.0257, 0.0168, 0.0102, 0.0056, 0.0026, 0.0010, 0.0002, 0.0000};
        REQUIRE_THAT(ground, Catch::Approx(test.getdata()).margin(0.0001));
    }
    SECTION("TRIANGULAR")
    {
        Window test(Triangular, 64);
        std::vector<double> ground = {0.0156, 0.0469, 0.0781, 0.1094, 0.1406, 0.1719, 0.2031, 0.2344, 0.2656, 0.2969, 0.3281, 0.3594, 0.3906, 0.4219, 0.4531, 0.4844, 0.5156, 0.5469, 0.5781, 0.6094, 0.6406, 0.6719, 0.7031, 0.7344, 0.7656, 0.7969, 0.8281, 0.8594, 0.8906, 0.9219, 0.9531, 0.9844, 0.9844, 0.9531, 0.9219, 0.8906, 0.8594, 0.8281, 0.7969, 0.7656, 0.7344, 0.7031, 0.6719, 0.6406, 0.6094, 0.5781, 0.5469, 0.5156, 0.4844, 0.4531, 0.4219, 0.3906, 0.3594, 0.3281, 0.2969, 0.2656, 0.2344, 0.2031, 0.1719, 0.1406, 0.1094, 0.0781, 0.0469, 0.0156};
        REQUIRE_THAT(ground, Catch::Approx(test.getdata()).margin(0.0001));
    }
    SECTION("TUKEY")
    {
        Window test(Tukey, 64, 0.5);
        std::vector<double> ground = {0.0000, 0.0099, 0.0393, 0.0869, 0.1509, 0.2287, 0.3173, 0.4132, 0.5125, 0.6113, 0.7056, 0.7919, 0.8665, 0.9266, 0.9698, 0.9944, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9944, 0.9698, 0.9266, 0.8665, 0.7919, 0.7056, 0.6113, 0.5125, 0.4132, 0.3173, 0.2287, 0.1509, 0.0869, 0.0393, 0.0099, 0.0000};
        REQUIRE_THAT(ground, Catch::Approx(test.getdata()).margin(0.0001));
    }
    SECTION("WELCH")
    {
        Window test(Welch, 64);
        std::vector<double> ground = {0.0000, 0.0615, 0.1211, 0.1787, 0.2344, 0.2881, 0.3398, 0.3896, 0.4375, 0.4834, 0.5273, 0.5693, 0.6094, 0.6475, 0.6836, 0.7178, 0.7500, 0.7803, 0.8086, 0.8350, 0.8594, 0.8818, 0.9023, 0.9209, 0.9375, 0.9521, 0.9648, 0.9756, 0.9844, 0.9912, 0.9961, 0.9990, 0.9990, 0.9961, 0.9912, 0.9844, 0.9756, 0.9648, 0.9521, 0.9375, 0.9209, 0.9023, 0.8818, 0.8594, 0.8350, 0.8086, 0.7803, 0.7500, 0.7178, 0.6836, 0.6475, 0.6094, 0.5693, 0.5273, 0.4834, 0.4375, 0.3896, 0.3398, 0.2881, 0.2344, 0.1787, 0.1211, 0.0615, 0.0000};
        REQUIRE_THAT(ground, Catch::Approx(test.getdata()).margin(0.0001));
    }
}